// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fsm.proto

package fsmpb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MsgBeat          MessageType = 0
	MsgHeartbeat     MessageType = 1
	MsgArbitRequest  MessageType = 2
	MsgArbitRelease  MessageType = 3
	MsgArbitResponse MessageType = 4
	MsgMemberAdd     MessageType = 5
	MsgMemberAddResp MessageType = 6
)

var MessageType_name = map[int32]string{
	0: "MsgBeat",
	1: "MsgHeartbeat",
	2: "MsgArbitRequest",
	3: "MsgArbitRelease",
	4: "MsgArbitResponse",
	5: "MsgMemberAdd",
	6: "MsgMemberAddResp",
}

var MessageType_value = map[string]int32{
	"MsgBeat":          0,
	"MsgHeartbeat":     1,
	"MsgArbitRequest":  2,
	"MsgArbitRelease":  3,
	"MsgArbitResponse": 4,
	"MsgMemberAdd":     5,
	"MsgMemberAddResp": 6,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef5b9a5dc540ad10, []int{0}
}

type StateType int32

const (
	DualRunning     StateType = 0
	FaultPending    StateType = 1
	RecoveryPending StateType = 2
	SingleRunning   StateType = 3
	EtcdStoped      StateType = 4
)

var StateType_name = map[int32]string{
	0: "DualRunning",
	1: "FaultPending",
	2: "RecoveryPending",
	3: "SingleRunning",
	4: "EtcdStoped",
}

var StateType_value = map[string]int32{
	"DualRunning":     0,
	"FaultPending":    1,
	"RecoveryPending": 2,
	"SingleRunning":   3,
	"EtcdStoped":      4,
}

func (x StateType) Enum() *StateType {
	p := new(StateType)
	*p = x
	return p
}

func (x StateType) String() string {
	return proto.EnumName(StateType_name, int32(x))
}

func (x *StateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StateType_value, data, "StateType")
	if err != nil {
		return err
	}
	*x = StateType(value)
	return nil
}

func (StateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef5b9a5dc540ad10, []int{1}
}

type Message struct {
	Type  MessageType `protobuf:"varint,1,opt,name=type,enum=fsmpb.MessageType" json:"type"`
	State StateType   `protobuf:"varint,3,opt,name=state,enum=fsmpb.StateType" json:"state"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef5b9a5dc540ad10, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MsgBeat
}

func (m *Message) GetState() StateType {
	if m != nil {
		return m.State
	}
	return DualRunning
}

func init() {
	proto.RegisterEnum("fsmpb.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("fsmpb.StateType", StateType_name, StateType_value)
	proto.RegisterType((*Message)(nil), "fsmpb.Message")
}

func init() { proto.RegisterFile("fsm.proto", fileDescriptor_ef5b9a5dc540ad10) }

var fileDescriptor_ef5b9a5dc540ad10 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4f, 0xc2, 0x40,
	0x18, 0x86, 0x5b, 0x28, 0x22, 0x1f, 0x0a, 0xe7, 0xc9, 0x40, 0x18, 0xaa, 0x71, 0x32, 0x84, 0x94,
	0xc4, 0xd5, 0x09, 0xa2, 0xc6, 0xa5, 0x89, 0x29, 0x4e, 0x6e, 0x57, 0xfa, 0x71, 0x21, 0x29, 0xbd,
	0xda, 0xef, 0x6a, 0xc2, 0xbf, 0x70, 0xf0, 0x47, 0x39, 0x32, 0x3a, 0x99, 0x18, 0xfe, 0x88, 0xe9,
	0xb5, 0x20, 0x6e, 0x97, 0xe7, 0x7b, 0xde, 0x37, 0x6f, 0x0e, 0x5a, 0x0b, 0x5a, 0x79, 0x69, 0xa6,
	0xb4, 0xe2, 0x8d, 0x05, 0xad, 0xd2, 0x70, 0xd0, 0x93, 0x4a, 0x2a, 0x43, 0xc6, 0xc5, 0xab, 0x3c,
	0x5e, 0x21, 0x34, 0x7d, 0x24, 0x12, 0x12, 0xf9, 0x08, 0x1c, 0xbd, 0x4e, 0xb1, 0x6f, 0x5f, 0xda,
	0xd7, 0x9d, 0x1b, 0xee, 0x99, 0x98, 0x57, 0x5d, 0x9f, 0xd7, 0x29, 0x4e, 0x9d, 0xcf, 0xef, 0x0b,
	0x2b, 0x30, 0x16, 0x1f, 0x41, 0x83, 0xb4, 0xd0, 0xd8, 0xaf, 0x1b, 0x9d, 0x55, 0xfa, 0xac, 0x60,
	0x07, 0x72, 0x29, 0x0d, 0x3f, 0x6c, 0x68, 0x1f, 0x34, 0xf1, 0x36, 0x34, 0x7d, 0x92, 0x53, 0x14,
	0x9a, 0x59, 0x9c, 0xc1, 0x89, 0x4f, 0xf2, 0x11, 0x45, 0xa6, 0xc3, 0x82, 0xd8, 0xfc, 0x1c, 0xba,
	0x3e, 0xc9, 0x49, 0x16, 0x2e, 0x75, 0x80, 0xaf, 0x39, 0x92, 0x66, 0xb5, 0xff, 0x30, 0x46, 0x41,
	0xc8, 0xea, 0xbc, 0x07, 0xec, 0x0f, 0x52, 0xaa, 0x12, 0x42, 0xe6, 0x54, 0x8d, 0x3e, 0xae, 0x42,
	0xcc, 0x26, 0x51, 0xc4, 0x1a, 0x95, 0xb7, 0x27, 0x85, 0xcb, 0x8e, 0x86, 0x0b, 0x68, 0xed, 0x07,
	0xf3, 0x2e, 0xb4, 0xef, 0x72, 0x11, 0x07, 0x79, 0x92, 0x2c, 0x13, 0x59, 0xee, 0x7a, 0x10, 0x79,
	0xac, 0x9f, 0x30, 0x89, 0x0a, 0x62, 0x76, 0x05, 0x38, 0x57, 0x6f, 0x98, 0xad, 0x77, 0xb0, 0xc6,
	0xcf, 0xe0, 0x74, 0xb6, 0x4c, 0x64, 0x8c, 0xbb, 0x64, 0x9d, 0x77, 0x00, 0xee, 0xf5, 0x3c, 0x9a,
	0x69, 0x95, 0x62, 0xc4, 0x9c, 0xe9, 0x60, 0xf3, 0xe3, 0x5a, 0xef, 0x5b, 0xd7, 0xda, 0x6c, 0x5d,
	0xeb, 0x6b, 0xeb, 0x5a, 0x2f, 0xc7, 0xde, 0xf8, 0xd6, 0xfc, 0xd8, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xfc, 0xff, 0x31, 0x99, 0xaa, 0x01, 0x00, 0x00,
}
